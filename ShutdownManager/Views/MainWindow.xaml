<Window x:Class="ShutdownManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ShutdownManager.Views"
        xmlns:converters="clr-namespace:ShutdownManager.Converters"
        mc:Ignorable="d"
        Title="Shutdown Manager" Height="500" Width="340" MinHeight="490" MinWidth="330" MaxHeight="550" MaxWidth="400" Icon="/ShutdownManager;component/icons/ShutdownManager.ico" WindowStartupLocation="CenterScreen">
    <Window.Resources>

        <!-- Converters -->
        <converters:StringToIntConverter x:Key="MyStringToIntConverter"/>
        <converters:BoolInvertConverter x:Key="MyBoolInvertConverter"/>
        <converters:StringToDoubleConverter x:Key="MyStringToDoubleConverter"/>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="RoundetButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <TabControl Margin="5">
        
        
        <!--        -->
        <!--- Timer -->
        <!--        -->
        <TabItem Header="Timer" Name="TIHeader">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="90"/>
                    <RowDefinition Height="65"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.2*"/>


                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <GroupBox Header="Time" Grid.ColumnSpan="2" Margin="7">
                    <TextBlock Name="TbTimer" 
                               TextAlignment="Center" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               FontSize="35" 
                               TextWrapping="Wrap" 
                               Text="{Binding TimeLeft , FallbackValue=00:00:00}" />

                </GroupBox>

                <Button Name="btStartStop" 
                    Margin="3" 
                    Click="Button_StartPause" 
                    Grid.Row="1" 
                    Background="White" 
                    BorderThickness="0" 
                    Width="50" 
                    Height="50" 
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Center" 
                    Style="{DynamicResource RoundetButton}" >
                    <Image Name="imagePlayPause" Source="/ShutdownManager;component/images\play.png"/>
                </Button>
                <Button Name="btStop" 
                    Margin="3" 
                    Click="Button_Stop" 
                    Grid.Row="1" 
                    Grid.Column="1" 
                    Background="White" 
                    BorderThickness="0" 
                    Width="50" Height="50" 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center" 
                    Style="{DynamicResource RoundetButton}"
                    IsEnabled="True">
                    <Image Name="imageStop" Source="/ShutdownManager;component/images\Stop.png"/>
                </Button>

                <GroupBox Margin="7" Header="Actions" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel>
                            <RadioButton GroupName="rbAction" x:Name="RadioButton_Shutdown" Margin="13,13,5,4" Content="Shutdown" IsChecked="{Binding ShutdownIsChecked}"/>
                            <RadioButton GroupName="rbAction" x:Name="RadioButton_Restart" Margin="13,5,5,4" Content="Restart" IsChecked="{Binding RestartIsChecked}" />
                            <RadioButton GroupName="rbAction" x:Name="RadioButton_Sleep" Margin="13,5,5,0" Content="Sleep" IsChecked="{Binding SleepIsChecked}"/>
                        </StackPanel>
                        <Button Name="NowButton" 
                                FontSize="15"
                                Content="Trigger Now" 
                                Grid.Row="2" 
                                Grid.Column="1" 
                                Height="40" Width="105" 
                                HorizontalAlignment="Center" VerticalAlignment="Center" 
                                Margin="20" 
                                Style="{DynamicResource RoundetButton}"
                                Background="LightGray"
                                Command="{Binding TriggerNowCommand}"/>    
                    </Grid>

                </GroupBox>




                <GroupBox Margin="7" Header="Time Settings" Grid.Row="3" Grid.ColumnSpan="2">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="0.6*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="82"/>
                        </Grid.ColumnDefinitions>

                        <TextBox PreviewTextInput="NumberValidationTextBox" 
                             FontSize="15" 
                             TextAlignment="Center" 
                             Text="{Binding Hours, FallbackValue= 0 , Converter={StaticResource MyStringToIntConverter}}" 
                             IsEnabled="{Binding IsTimerStarted, Converter={StaticResource MyBoolInvertConverter}}"
                             Name="txtHours" 
                             HorizontalAlignment="Right" 
                             Height="24" 
                             Width="65"
                             Grid.Column="1"/>

                        <Slider Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" Margin="20,0,20,0" VerticalAlignment="Center" Width="140"
                                Value="{Binding Hours}" Maximum="23" 
                                IsEnabled="{Binding IsTimerStarted, Converter={StaticResource MyBoolInvertConverter}}"/>

                        <TextBox PreviewTextInput="NumberValidationTextBox" 
                             FontSize="15" 
                             TextAlignment="Center" 
                             Text="{Binding Minutes, FallbackValue=0, Converter={StaticResource MyStringToIntConverter}}" 
                             IsEnabled="{Binding IsTimerStarted, Converter={StaticResource MyBoolInvertConverter}}"
                             Name="txtMinutes" 
                             HorizontalAlignment="Right" 
                             Height="24" 
                             Width="65" 
                             Grid.Row="1"
                             Grid.Column="1"/>

                        <Slider Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" Margin="20,0,20,0" VerticalAlignment="Center" Width="140" 
                                Value="{Binding Minutes}" Maximum="60" 
                                IsEnabled="{Binding IsTimerStarted, Converter={StaticResource MyBoolInvertConverter}}" />
                        
                        <TextBox PreviewTextInput="NumberValidationTextBox" 
                             FontSize="15" 
                             TextAlignment="Center" 
                             Text="{Binding Seconds, FallbackValue=0, Converter={StaticResource MyStringToIntConverter}}"
                             IsEnabled="{Binding IsTimerStarted, Converter={StaticResource MyBoolInvertConverter}}"
                             Name="txtSeconds"  
                             HorizontalAlignment="Right" 
                             Height="24" 
                             Width="65" 
                             Grid.Row="2"
                             Grid.Column="1"/>

                        <Slider Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" Margin="20,0,20,0" VerticalAlignment="Center" Width="140" 
                                Value="{Binding Seconds}" Maximum="60" 
                                IsEnabled="{Binding IsTimerStarted, Converter={StaticResource MyBoolInvertConverter}}"/>
                        
                        <TextBlock Text="h" Grid.Column="2" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />
                        <TextBlock Text="m" Grid.Row="1" Grid.Column="2" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />
                        <TextBlock Text="s"  Grid.Row="2" Grid.Column="2" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />

                    </Grid>

                </GroupBox>


            </Grid>
        </TabItem>


        
        <!--                        -->
        <!--- Clock  -->
        <!--                        -->
        <TabItem Header="Clock" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="90"/>
                    <RowDefinition Height="65"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.2*"/>

                </Grid.RowDefinitions>


                <GroupBox Header="Actual Time" Margin="7">
                    <TextBlock Name="tbTime" 
                               TextAlignment="Center" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               FontSize="35" 
                               TextWrapping="Wrap" 
                               Text="{Binding ClockTime, FallbackValue=00:00:00}" />
                </GroupBox>
                <GroupBox Header="Trigger Time" Grid.Row="1" Margin="7">
                    <TextBlock Name="tbTriggerTime" 
                               TextAlignment="Center" 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Center" 
                               FontSize="25" 
                               TextWrapping="Wrap" 
                               Text="{Binding TriggerTime, FallbackValue=00:00:00, Mode=OneWay}" />
                </GroupBox>

                <GroupBox Header="Actions" Grid.Row="2" Margin="7">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="1">
                            <RadioButton GroupName="rbActionClock" Margin="13,13,5,4" Content="Shutdown" IsChecked="{Binding ShutdownClockIsChecked}"/>
                            <RadioButton GroupName="rbActionClock" Margin="13,5,5,4" Content="Restart" IsChecked="{Binding RestartClockIsChecked}" />
                            <RadioButton GroupName="rbActionClock" Margin="13,5,5,0" Content="Sleep" IsChecked="{Binding SleepClockIsChecked}"/>
                        </StackPanel>
                        <local:ToggleButton Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="55" Width="70" Toggled="{Binding IsClockObservingActiv}"/>
                        
                    </Grid>
                </GroupBox>
                
                <GroupBox Header="Clock settings" Grid.Row="3" Margin="7" >
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="0.6*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="82"/>
                        </Grid.ColumnDefinitions>

                        <TextBox PreviewTextInput="NumberValidationTextBox" 
                             FontSize="15" 
                             TextAlignment="Center" 
                             Text="{Binding ClockHours, FallbackValue= 0 , Converter={StaticResource MyStringToIntConverter}}" 
                             IsEnabled="{Binding IsClockObservingActiv, Converter={StaticResource MyBoolInvertConverter}}"
                             Name="txtClockHours" 
                             HorizontalAlignment="Right" 
                             Height="24" 
                             Width="65"
                             Grid.Column="1"/>

                        <Slider Name="sClockHours" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" Margin="20,0,20,0" VerticalAlignment="Center" Width="140"
                                Value="{Binding ClockHours}" Maximum="23" 
                                IsEnabled="{Binding IsClockObservingActiv, Converter={StaticResource MyBoolInvertConverter}}" MouseDoubleClick="Slider_ClockHours_MouseDoubleClick"/>

                        <TextBox PreviewTextInput="NumberValidationTextBox" 
                             FontSize="15" 
                             TextAlignment="Center" 
                             Text="{Binding ClockMinutes, FallbackValue=0, Converter={StaticResource MyStringToIntConverter}}" 
                             IsEnabled="{Binding IsClockObservingActiv, Converter={StaticResource MyBoolInvertConverter}}"
                             Name="txtClockMinutes" 
                             HorizontalAlignment="Right" 
                             Height="24" 
                             Width="65" 
                             Grid.Row="1"
                             Grid.Column="1"/>

                        <Slider Name="sClockMinutes" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" Margin="20,0,20,0" VerticalAlignment="Center" Width="140" 
                                Value="{Binding ClockMinutes}" Maximum="60" 
                                IsEnabled="{Binding IsClockObservingActiv, Converter={StaticResource MyBoolInvertConverter}}" MouseDoubleClick="Slider_ClockMinutes_MouseDoubleClick"/>

                        <TextBox PreviewTextInput="NumberValidationTextBox" 
                             FontSize="15" 
                             TextAlignment="Center" 
                             Text="{Binding ClockSeconds, FallbackValue=0, Converter={StaticResource MyStringToIntConverter}}"
                             IsEnabled="{Binding IsClockObservingActiv, Converter={StaticResource MyBoolInvertConverter}}"
                             Name="txtClockSeconds"  
                             HorizontalAlignment="Right" 
                             Height="24" 
                             Width="65" 
                             Grid.Row="2"
                             Grid.Column="1"/>

                        <Slider Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" Margin="20,0,20,0" VerticalAlignment="Center" Width="140" Name="sClockSeconds" 
                                Value="{Binding ClockSeconds}" Maximum="60" 
                                IsEnabled="{Binding IsClockObservingActiv, Converter={StaticResource MyBoolInvertConverter}}" MouseDoubleClick="Slider_ClockSeconds_MouseDoubleClick" />

                        <TextBlock Text="h" Grid.Column="2" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />
                        <TextBlock Text="m" Grid.Row="1" Grid.Column="2" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />
                        <TextBlock Text="s"  Grid.Row="2" Grid.Column="2" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />

                    </Grid>
                </GroupBox>

            </Grid>
           
        </TabItem>

        <!--                        -->
        <!--- Down/Upload Controll  -->
        <!--                        -->
        <TabItem Header="Down/Upload Control" Name="TIDownUpload" IsSelected="{Binding Path= DownUploadIsSelected, Mode=OneWayToSource}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>


                <!--- Infotext  -->
                <StackPanel Margin="7">
                    <TextBlock Name="tbTextDownUp1" Margin="2"> If the Down-, Upload Control is active, it will check</TextBlock>
                    <TextBlock Name="tbTextDownUp2" Margin="2" > if the average XXXInsertDownUploadXXX speed is under XXXInsertSpeedXXX MB/s</TextBlock>
                    <TextBlock x:Name="tbTextDownUp3" Margin=" 2,2,2,15" ><Run Text="for Insert"/><Run Language="de-de" Text="Times"/><Run Text=" s then the PC will shut down"/></TextBlock>
                </StackPanel>

                

                <GroupBox Header="Actions" Margin="7" Grid.Row="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!--- Checkbox to activate the function  -->
                        <local:ToggleButton Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="55" Width="70" Toggled="{Binding IsObserveActiv}"/>
                        <StackPanel Grid.Column="1">
                            <RadioButton GroupName="rbActionUploadDownload" Margin="13,13,5,4" Content="Shutdown" IsChecked="{Binding ShutdownUPDownIsChecked}"/>
                            <RadioButton GroupName="rbActionUploadDownload" Margin="13,5,5,4" Content="Restart" IsChecked="{Binding RestartUPDownIsChecked}" />
                            <RadioButton GroupName="rbActionUploadDownload" Margin="13,5,5,0" Content="Sleep" IsChecked="{Binding SleepUPDownIsChecked}"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>


                    <!--- Showing the actual values  -->
                <GroupBox Header="Actual values" Margin="7,3.5,7,3.5" Grid.Row="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.7*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.7*"/>
                        </Grid.ColumnDefinitions>


                        <TextBlock Grid.Column="0" Margin="7" HorizontalAlignment = "Left" VerticalAlignment="Center" >Download:</TextBlock>
                        <TextBlock Grid.Column="1" Margin="0,7,0,7" HorizontalAlignment = "Left" Text="{Binding DownloadValue}"/>
                        <TextBlock Grid.Column="2" Margin="7" HorizontalAlignment = "Left" VerticalAlignment="Center" >Upload:</TextBlock>
                        <TextBlock Grid.Column="3" Margin="0,7,0,7" HorizontalAlignment = "Left" Text="{Binding UploadValue}"/>
                    </Grid>
                </GroupBox>


                <!--- Properties -->
                <GroupBox Header="Properties" Margin="7,3.5,7,3.5" Grid.Row="3">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>

                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="1.4*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="Observe" Margin="7,7,3.5,7">
                            <StackPanel>
                                <RadioButton GroupName="rbDownUp" Name="RadioButton_Download" Margin="7,14,7,10" Content="Downlaod" Click="RadioButton_DownUp_Click" IsEnabled="{Binding IsObserveActiv, Converter={StaticResource MyBoolInvertConverter}}"/>
                                <RadioButton GroupName="rbDownUp" Name="RadioButton_Upload"   Margin="7,0,0,10"  Content="Upload" Click="RadioButton_DownUp_Click" IsEnabled="{Binding IsObserveActiv, Converter={StaticResource MyBoolInvertConverter}}"/> 
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Values" Grid.Column="2" Margin="7,3.5,7,7">
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="1.6*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBox Margin="7" 
                                         TextAlignment="Center" 
                                         Text="{Binding Speed, FallbackValue=0.5, Converter={StaticResource MyStringToDoubleConverter}}"
                                         PreviewTextInput="NumberValidationTextBoxDouble"
                                         Name="tBSpeed"
                                         TextChanged="TextChanged"/>
                                <TextBox Margin="7" 
                                         TextAlignment="Center" 
                                         Grid.Row="1" 
                                         Text="{Binding ObserveTime, FallbackValue=10, Converter={StaticResource MyStringToIntConverter}}" 
                                         PreviewTextInput="NumberValidationTextBox"
                                         Name="tBSeconds"
                                         TextChanged="TextChanged"/>
                                <TextBlock Margin="4,7,7,7" Grid.Column="1" Text="Speed (MB/s)"  />
                                <TextBlock Margin="4,7,7,7" Grid.Column="1" Grid.Row="1"><Run Language="de-de" Text="Times (s)"/></TextBlock>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
