<Window x:Class="ShutdownManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ShutdownManager"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="Shutdown Manager" Height="320" Width="290" MinHeight="320" MinWidth="270" MaxHeight="500" MaxWidth="400" Icon="icons/ShutdownManager.ico" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="RoundetButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1.2*"/>
            <RowDefinition Height="55"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <tb:TaskbarIcon x:Name="MyNotifyIcon" IconSource="/icons/ShutdownManager.ico" ToolTipText="ShutdownManager" />

        <GroupBox Header="Timer" Grid.ColumnSpan="2" Margin="7">
            <TextBlock Name="TbTimer" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="35" TextWrapping="Wrap" Text="00:00:00" />
        </GroupBox>


        <Button Name="btStartStop" Margin="3" Click="Button_StartStop" Grid.Row="1" Background="White" BorderThickness="0" Width="50" Height="50" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource RoundetButton}" >
            <Image Name="imagePlayPause" Source="images\play.png"/>
        </Button>
        <Button Name="btStop" Margin="3" Click="Button_Stop" Grid.Row="1" Grid.Column="1" Background="White" BorderThickness="0" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource RoundetButton}"  >
            <Image Name="imageStop" Source="images\Stop.png"/>
        </Button>
        

        <GroupBox Margin="7" Header="Time Settings" Grid.Row="3">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.6*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="82"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBox PreviewTextInput="NumberValidationTextBox" FontSize="15" TextAlignment="Center" Text="0" TextChanged="HoursTxt_TextChanged" Name="txtHours" HorizontalAlignment="Right" Height="24" Width="65"/>
                <TextBox PreviewTextInput="NumberValidationTextBox" FontSize="15" TextAlignment="Center" Text="0" TextChanged="MinutesTxt_TextChanged" Name="txtMinutes" HorizontalAlignment="Right" Height="24" Width="65" Grid.Row="1"/>
                <TextBox PreviewTextInput="NumberValidationTextBox" FontSize="15" TextAlignment="Center" Text="0" TextChanged="SecondsTxt_TextChanged" Name="txtSeconds"  HorizontalAlignment="Right" Height="24" Width="65" Grid.Row="2"/>

                <TextBlock Text="h" Grid.Column="1" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />
                <TextBlock Text="m" Grid.Row="1" Grid.Column="1" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />
                <TextBlock Text="s"  Grid.Row="2" Grid.Column="1" FontSize="17" HorizontalAlignment = "Left" VerticalAlignment="Center" Margin="5" TextAlignment="Center" />

            </Grid>

        </GroupBox>

        <GroupBox Margin="7" Header="Action" Grid.Row="3" Grid.Column="1">

            <StackPanel>
                <RadioButton Checked="RadioButton_Update" GroupName="rbAction" x:Name="RadioButton_Shutdown" Margin="13,15,5,5" Content="Shutdown" IsChecked="True"/>
                <RadioButton Checked="RadioButton_Update" GroupName="rbAction" x:Name="RadioButton_Restart" Margin="13,5,5,5" Content="Restart" />
                <RadioButton Checked="RadioButton_Update" GroupName="rbAction" x:Name="RadioButton_Sleep" Margin="13,5,5,5" Content="Sleep"/>
            </StackPanel>

        </GroupBox>

    </Grid>
</Window>
